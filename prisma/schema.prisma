generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserTypeEnum {
  client    @map("client")
  supplier  @map("supplier")
}

enum AdminRoleEnum {
  admin  @map("admin")
  super_admin @map("super_admin")
}

model Admins {
  id         String         @map("id")          @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  name       String         @map("name")        @db.VarChar() 
  phone      String         @map("phone")       @db.VarChar()
  password   String         @map("password")    @db.VarChar()
  role       AdminRoleEnum                                     @default(admin)
  createdAt  DateTime       @map("created_at")  @db.Timestamp  @default(now())
  updatedAt  DateTime       @map("updated_at")  @db.Timestamp  @updatedAt
  deletedAt  DateTime?      @map("deleted_at")  @db.Timestamp

  permissions      Permissions[]
  incomingOrders   IncomingOrder[]
  orders           Order[] 
  returnedOrders   ReturnedOrder[]
  refundIncoming   RefundIncoming[]
  payments         Payment[]
  employeePayment  EmployeePayment[]

  @@id([ id ])
  @@map("admins")
}

model Roles {
  id         String         @map("id")          @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  name       String         @map("name")        @db.VarChar() 
  key        String         @map("key")         @db.VarChar()  @default("")

  permissions Permissions[]
  @@id([ id ])
  @@map("roles")
}

model Permissions {
  id         String         @map("id")          @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  name       String         @map("name")        @db.VarChar() 
  key        String         @map("key")         @db.VarChar()  @default("")
  role_id    String         @map("role_id")     @db.Uuid() 

  admins Admins[]
  role  Roles  @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("permissions")
}

model Users {
  id         String         @map("id")          @db.Uuid           @default(dbgenerated("GEN_RANDOM_UUID()"))
  name       String         @map("name")        @db.VarChar() 
  phone      String         @map("phone")       @db.VarChar()
  type       UserTypeEnum
  debt       Decimal        @map("debt")        @db.Decimal(10,3)  @default(0)
  chatId     BigInt?       @map("chat_id")      @db.BigInt  
  createdAt  DateTime       @map("created_at")  @db.Timestamp      @default(now())
  updatedAt  DateTime       @map("updated_at")  @db.Timestamp      @updatedAt
  deletedAt  DateTime?      @map("deleted_at")  @db.Timestamp

  orders     Order[]
  incomingOrder IncomingOrder[]
  payments   Payment[]
  incomingOrderPayment IncomingOrderPayment[]
  returnedOrder ReturnedOrder[]
  refundIncoming RefundIncoming[]

  @@id([ id ])
  @@map("users")
  @@index([id, name])
}

model Products {
  id               String         @map("id")               @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  name             String         @map("name")             @db.VarChar() 
  count            Int            @map("count")            @db.Integer()
  unit             String         @map("unit")             @db.VarChar()
  min_amount       Int            @map("min_amount")       @db.Integer()
  cost             Decimal        @map("cost")             @db.Decimal(10,3)
  selling_price    Decimal        @map("selling_price")    @db.Decimal(10,3)
  wholesale_price  Decimal        @map("wholesale_price")  @db.Decimal(10,3)
  image            String?        @map("role")             @db.VarChar()
  category         String?        @map("category")         @db.VarChar()
  createdAt        DateTime       @map("created_at")       @db.Timestamp  @default(now())
  updatedAt        DateTime       @map("updated_at")       @db.Timestamp  @updatedAt
  deletedAt        DateTime?      @map("deleted_at")       @db.Timestamp

  incomingProducts  IncomingProducts[]
  orderProducts     OrderProducts[]
  returnedProducts  ReturnedProduct[]
  refundIncomingProducts RefundIncomingProduct[]

  @@id([ id ])
  @@map("products")
  @@index([id, name])
}

model IncomingOrder {
  id           String     @map("id")            @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  supplierId   String     @map("supplier_id")   @db.Uuid() 
  sum          Decimal    @map("sum")           @db.Decimal(10,3)
  debt         Decimal    @map("debt")          @db.Decimal(10,3)  @default(0)
  adminId      String     @map("admin_id")      @db.Uuid()
  accepted     Boolean    @map("accepted")      @db.Boolean    @default(false)
  sellingDate  DateTime   @map("selling_date")  @db.Timestamp  @default(now())
  createdAt    DateTime   @map("created_at")    @db.Timestamp  @default(now())
  updatedAt    DateTime   @map("updated_at")    @db.Timestamp  @updatedAt
  deletedAt    DateTime?  @map("deleted_at")    @db.Timestamp

  incomingProducts   IncomingProducts[]
  payment    IncomingOrderPayment[]
  supplier   Users    @relation(fields: [supplierId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  admin      Admins   @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("incoming_order")
}

model IncomingProducts {
  id               String         @map("id")                 @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  incomingOrderId  String         @map("incoming_order_id")  @db.Uuid() 
  productId        String         @map("product_id")         @db.Uuid() 
  count            Int            @map("count")              @db.Integer()
  cost             Decimal        @map("cost")               @db.Decimal(10,3)
  selling_price    Decimal?       @map("selling_price")      @db.Decimal(10,3)
  wholesale_price  Decimal?       @map("wholesale_price")    @db.Decimal(10,3)
  createdAt        DateTime       @map("created_at")         @db.Timestamp  @default(now())
  updatedAt        DateTime       @map("updated_at")         @db.Timestamp  @updatedAt
  deletedAt        DateTime?      @map("deleted_at")         @db.Timestamp

  incomingOrder IncomingOrder @relation(fields: [incomingOrderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product  Products  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("incoming_products")
}

model Order {
  id           String       @map("id")            @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  articl       Int          @map("articl")        @db.Integer    @default(autoincrement())
  clientId     String       @map("client_id")     @db.Uuid() 
  sum          Decimal      @map("sum")           @db.Decimal(10,3)
  debt         Decimal      @map("debt")          @db.Decimal(10,3)  @default(0)
  adminId      String       @map("admin_id")      @db.Uuid()
  accepted     Boolean      @map("accepted")      @db.Boolean    @default(false)
  description  String?      @map("description")   @db.VarChar()
  sellingDate  DateTime     @map("selling_date")  @db.Timestamp  @default(now())
  createdAt    DateTime     @map("created_at")    @db.Timestamp  @default(now())
  updatedAt    DateTime     @map("updated_at")    @db.Timestamp  @updatedAt
  deletedAt    DateTime?    @map("deleted_at")    @db.Timestamp

  products   OrderProducts[]
  payment    Payment[]
  client     Users   @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  admin      Admins  @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("order")
  @@index([id, articl])
}

model OrderProducts {
  id               String         @map("id")               @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  orderId          String         @map("order_id")         @db.Uuid() 
  productId        String         @map("product_id")       @db.Uuid() 
  price            Decimal        @map("price")            @db.Decimal(10,3)
  cost             Decimal        @map("cost")             @db.Decimal(10,3)
  count            Int            @map("count")            @db.Integer()
  createdAt        DateTime       @map("created_at")       @db.Timestamp  @default(now())
  updatedAt        DateTime       @map("updated_at")       @db.Timestamp  @updatedAt
  deletedAt        DateTime?      @map("deleted_at")       @db.Timestamp

  order    Order     @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product  Products  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("order_products")
}

model Payment {
  id           String     @map("id")           @db.Uuid           @default(dbgenerated("GEN_RANDOM_UUID()"))
  orderId      String?    @map("order_id")     @db.Uuid() 
  clientId     String     @map("client_id")    @db.Uuid() 
  totalPay     Decimal?   @map("total_pay")    @db.Decimal(10,3)  @default(0)
  debt         Decimal?   @map("debt")         @db.Decimal(10,3)  @default(0)
  cash         Decimal?   @map("cash")         @db.Decimal(10,3)  @default(0)
  transfer     Decimal?   @map("transfer")     @db.Decimal(10,3)  @default(0)
  card         Decimal?   @map("card")         @db.Decimal(10,3)  @default(0)
  other        Decimal?   @map("other")        @db.Decimal(10,3)  @default(0)
  description  String?    @map("description")  @db.VarChar() 
  sellerId     String?     @map("seller_id")    @db.Uuid() 
  createdAt    DateTime   @map("created_at")   @db.Timestamp      @default(now())
  updatedAt    DateTime   @map("updated_at")   @db.Timestamp      @updatedAt
  deletedAt    DateTime?  @map("deleted_at")   @db.Timestamp

  order    Order?    @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  client   Users    @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  seller   Admins?   @relation(fields: [sellerId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("payment")
}

model IncomingOrderPayment {
  id           String     @map("id")           @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  orderId      String?    @map("order_id")     @db.Uuid() 
  supplierId   String     @map("supplier_id")  @db.Uuid() 
  totalPay     Decimal?   @map("total_pay")    @db.Decimal(10,3)  @default(0)
  debt         Decimal?   @map("debt")         @db.Decimal(10,3)  @default(0)
  cash         Decimal?   @map("cash")         @db.Decimal(10,3)  @default(0)
  transfer     Decimal?   @map("transfer")     @db.Decimal(10,3)  @default(0)
  card         Decimal?   @map("card")         @db.Decimal(10,3)  @default(0)
  other        Decimal?   @map("other")        @db.Decimal(10,3)  @default(0)
  humo         Decimal?   @map("humo")         @db.Decimal(10,3)  @default(0)
  description  String?    @map("description")  @db.VarChar()
  createdAt    DateTime   @map("created_at")   @db.Timestamp  @default(now())
  updatedAt    DateTime   @map("updated_at")   @db.Timestamp  @updatedAt
  deletedAt    DateTime?  @map("deleted_at")   @db.Timestamp

  order    IncomingOrder?    @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  supplier   Users    @relation(fields: [supplierId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("incoming_order_payment")
}

model ReturnedOrder {
  id            String       @map("id")             @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  clientId      String       @map("client_id")      @db.Uuid() 
  sum           Decimal      @map("sum")            @db.Decimal(10,3)
  fromClient    Decimal?     @map("from_client")    @db.Decimal(10,3)  @default(0)
  cashPayment   Decimal?     @map("cash_payment")   @db.Decimal(10,3)  @default(0)
  adminId       String       @map("admin_id")       @db.Uuid()
  accepted      Boolean      @map("accepted")       @db.Boolean    @default(false)
  description   String?      @map("description")    @db.VarChar()
  returnedDate  DateTime?    @map("returned_date")  @db.Timestamp  @default(now())
  createdAt     DateTime     @map("created_at")     @db.Timestamp  @default(now())
  updatedAt     DateTime     @map("updated_at")     @db.Timestamp  @updatedAt
  deletedAt     DateTime?    @map("deleted_at")     @db.Timestamp

  products   ReturnedProduct[]
  client     Users   @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  admin      Admins  @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("returned_order")
}

model ReturnedProduct {
  id               String         @map("id")               @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  orderId          String         @map("order_id")         @db.Uuid() 
  productId        String         @map("product_id")       @db.Uuid() 
  price            Decimal        @map("price")            @db.Decimal(10,3)
  count            Int            @map("count")            @db.Integer()
  createdAt        DateTime       @map("created_at")       @db.Timestamp  @default(now())
  updatedAt        DateTime       @map("updated_at")       @db.Timestamp  @updatedAt
  deletedAt        DateTime?      @map("deleted_at")       @db.Timestamp

  order    ReturnedOrder     @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product  Products  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("returned_products")
}

model RefundIncoming {
  id           String       @map("id")            @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  supplierId   String       @map("supplier_id")   @db.Uuid() 
  sum          Decimal      @map("sum")           @db.Decimal(10,3)
  adminId      String       @map("admin_id")      @db.Uuid()
  description  String?      @map("description")   @db.VarChar()
  createdAt    DateTime     @map("created_at")    @db.Timestamp  @default(now())
  updatedAt    DateTime     @map("updated_at")    @db.Timestamp  @updatedAt
  deletedAt    DateTime?    @map("deleted_at")    @db.Timestamp

  products   RefundIncomingProduct[]
  supplier     Users   @relation(fields: [supplierId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  admin      Admins  @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("refund_incoming")
}

model RefundIncomingProduct {
  id               String         @map("id")               @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  orderId          String         @map("order_id")         @db.Uuid() 
  productId        String         @map("product_id")       @db.Uuid() 
  price            Decimal        @map("price")            @db.Decimal(10,3)
  count            Int            @map("count")            @db.Integer()
  createdAt        DateTime       @map("created_at")       @db.Timestamp  @default(now())
  updatedAt        DateTime       @map("updated_at")       @db.Timestamp  @updatedAt
  deletedAt        DateTime?      @map("deleted_at")       @db.Timestamp

  order    RefundIncoming     @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product  Products           @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("refund_incoming_product")
}

model EmployeePayment {
  id           String       @map("id")            @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  sum          Decimal      @map("sum")           @db.Decimal(10,3)
  employeeId   String       @map("employee_id")   @db.Uuid()
  description  String?      @map("description")   @db.VarChar()
  createdAt    DateTime     @map("created_at")    @db.Timestamp  @default(now())
  updatedAt    DateTime     @map("updated_at")    @db.Timestamp  @updatedAt
  deletedAt    DateTime?    @map("deleted_at")    @db.Timestamp

  employee   Admins  @relation(fields: [employeeId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@map("employee_payment")
}